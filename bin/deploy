#!/bin/sh

set -eu

BASEDIR=$(dirname "$0")
SLS_VERSION=$(serverless -v)
CURRENT_ENV=$("${BASEDIR}"/get_current_env)

echo "### current deployment environment is '$CURRENT_ENV'"

export CONFIG_ENV=${CURRENT_ENV:-'dev'}
export AWS_REGION=${AWS_REGION:-'ap-northeast-1'}
export SLS_DEBUG="*"
export CREATE_DOMAIN=${CREATE_DOMAIN:-'false'}

PACKAGE_NAME=${PACKAGE_NAME:-sls-build-artifact}
PACKAGE_PATH="$HOME/$CONFIG_ENV/$AWS_REGION/$PACKAGE_NAME"

echo "### Setting env to '$CONFIG_ENV' ###"

echo "### Serverless version is: $SLS_VERSION ###"

if [ "$CREATE_DOMAIN" = "true" ]; then
  echo "### Create custom domain ###"
  npm install --silent
  set +e
  DOMAIN_OUTPUT=$(sh -c "serverless create_domain --stage=$CONFIG_ENV" 2>&1)
  DOMAIN_SUCCESS=$?
  echo "$DOMAIN_OUTPUT"
  set -e

  if [ "$DOMAIN_SUCCESS" -ne 0 ]; then
    echo "### Custom domain creation failed, for '$CONFIG_ENV' environment and '$AWS_REGION' region ###"

    # Create deployment failure status
    "${BASEDIR}"/deployment_create_status failure

    exit "$DOMAIN_SUCCESS"
  fi
  sleep 5m
fi

PACKAGE=""

if [ -f "$PACKAGE_PATH" ]; then
  PACKAGE="--package=${PACKAGE_PATH}"
  echo "### Running serverless deploy for released package ###"
fi

echo "### Deploying package for region '$AWS_REGION' ###"

set +e
OUTPUT=$(sh -c "serverless deploy --verbose --stage=${CONFIG_ENV} ${PACKAGE}" 2>&1)
SUCCESS=$?
echo "$OUTPUT"
set -e

if [ "$SUCCESS" -ne 0 ]; then
  echo "### Deployment failed, for '$CONFIG_ENV' environment and '$AWS_REGION' region ###"

  # Create deployment failure status
  "${BASEDIR}"/deployment_create_status failure

  exit "$SUCCESS"
fi

echo "### Success Deployment to '$CONFIG_ENV' environment and '$AWS_REGION' region ###"

exit 0

